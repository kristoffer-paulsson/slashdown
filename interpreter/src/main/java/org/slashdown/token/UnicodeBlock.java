package org.slashdown.token;

/**
 * Java enum representing Unicode blocks as of Unicode 16.0.0 (from Blocks.txt).
 * Each constant's name is the block's long name in uppercase with underscores,
 * and carries the inclusive range [begin, end] as integer code points.
 */
public enum UnicodeBlock {

    BASIC_LATIN(0x0000, 0x007F),
    LATIN_1_SUPPLEMENT(0x0080, 0x00FF),
    LATIN_EXTENDED_A(0x0100, 0x017F),
    LATIN_EXTENDED_B(0x0180, 0x024F),
    IPA_EXTENSIONS(0x0250, 0x02AF),
    SPACING_MODIFIER_LETTERS(0x02B0, 0x02FF),
    COMBINING_DIACRITICAL_MARKS(0x0300, 0x036F),
    GREEK_AND_COPTIC(0x0370, 0x03FF),
    CYRILLIC(0x0400, 0x04FF),
    CYRILLIC_SUPPLEMENT(0x0500, 0x052F),
    ARMENIAN(0x0530, 0x058F),
    HEBREW(0x0590, 0x05FF),
    ARABIC(0x0600, 0x06FF),
    SYRIAC(0x0700, 0x074F),
    ARABIC_SUPPLEMENT(0x0750, 0x077F),
    THAANA(0x0780, 0x07BF),
    NKO(0x07C0, 0x07FF),
    SAMARITAN(0x0800, 0x083F),
    MANDAIC(0x0840, 0x085F),
    SYRIAC_SUPPLEMENT(0x0860, 0x086F),
    ARABIC_EXTENDED_A(0x08A0, 0x08FF),
    DEVANAGARI(0x0900, 0x097F),
    BENGALI(0x0980, 0x09FF),
    GURMUKHI(0x0A00, 0x0A7F),
    GUJARATI(0x0A80, 0x0AFF),
    ORIYA(0x0B00, 0x0B7F),
    TAMIL(0x0B80, 0x0BFF),
    TELUGU(0x0C00, 0x0C7F),
    KANNADA(0x0C80, 0x0CFF),
    MALAYALAM(0x0D00, 0x0D7F),
    SINHALA(0x0D80, 0x0DFF),
    THAI(0x0E00, 0x0E7F),
    LAO(0x0E80, 0x0EFF),
    TIBETAN(0x0F00, 0x0FFF),
    MYANMAR(0x1000, 0x109F),
    GEORGIAN(0x10A0, 0x10FF),
    HANGUL_JAMO(0x1100, 0x11FF),
    ETHIOPIC(0x1200, 0x137F),
    ETHIOPIC_SUPPLEMENT(0x1380, 0x139F),
    CHEROKEE(0x13A0, 0x13FF),
    UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS(0x1400, 0x167F),
    OGHAM(0x1680, 0x169F),
    RUNIC(0x16A0, 0x16FF),
    TAGALOG(0x1700, 0x171F),
    HANUNOO(0x1720, 0x173F),
    BUHID(0x1740, 0x175F),
    TAGBANWA(0x1760, 0x177F),
    KHMER(0x1780, 0x17FF),
    MONGOLIAN(0x1800, 0x18AF),
    UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED(0x18B0, 0x18FF),
    LIMBU(0x1900, 0x194F),
    TAI_LE(0x1950, 0x197F),
    NEW_TAI_LUE(0x1980, 0x19DF),
    KHMER_SYMBOLS(0x19E0, 0x19FF),
    BUGINESE(0x1A00, 0x1A1F),
    TAI_THAM(0x1A20, 0x1AAF),
    COMBINING_DIACRITICAL_MARKS_EXTENDED(0x1AB0, 0x1AFF),
    BALINESE(0x1B00, 0x1B7F),
    SUNDANESE(0x1B80, 0x1BBF),
    BATAK(0x1BC0, 0x1BFF),
    LEPCHA(0x1C00, 0x1C4F),
    OL_CHIKI(0x1C50, 0x1C7F),
    CYRILLIC_EXTENDED_C(0x1C80, 0x1C8F),
    GEORGIAN_EXTENDED(0x1C90, 0x1CBF),
    SUNDANESE_SUPPLEMENT(0x1CC0, 0x1CCF),
    VEDIC_EXTENSIONS(0x1CD0, 0x1CFF),
    PHONETIC_EXTENSIONS(0x1D00, 0x1D7F),
    PHONETIC_EXTENSIONS_SUPPLEMENT(0x1D80, 0x1DBF),
    COMBINING_DIACRITICAL_MARKS_SUPPLEMENT(0x1DC0, 0x1DFF),
    LATIN_EXTENDED_ADDITIONAL(0x1E00, 0x1EFF),
    GREEK_EXTENDED(0x1F00, 0x1FFF),
    GENERAL_PUNCTUATION(0x2000, 0x206F),
    SUPERSCRIPTS_AND_SUBSCRIPTS(0x2070, 0x209F),
    CURRENCY_SYMBOLS(0x20A0, 0x20CF),
    COMBINING_DIACRITICAL_MARKS_FOR_SYMBOLS(0x20D0, 0x20FF),
    LETTERLIKE_SYMBOLS(0x2100, 0x214F),
    NUMBER_FORMS(0x2150, 0x218F),
    ARROWS(0x2190, 0x21FF),
    MATHEMATICAL_OPERATORS(0x2200, 0x22FF),
    MISCELLANEOUS_TECHNICAL(0x2300, 0x23FF),
    CONTROL_PICTURES(0x2400, 0x243F),
    OPTICAL_CHARACTER_RECOGNITION(0x2440, 0x245F),
    ENCLOSED_ALPHANUMERICS(0x2460, 0x24FF),
    BOX_DRAWING(0x2500, 0x257F),
    BLOCK_ELEMENTS(0x2580, 0x259F),
    GEOMETRIC_SHAPES(0x25A0, 0x25FF),
    MISCELLANEOUS_SYMBOLS(0x2600, 0x26FF),
    DINGBATS(0x2700, 0x27BF),
    MISCELLANEOUS_MATH_SYMBOLS_A(0x27C0, 0x27EF),
    SUPPLEMENTAL_ARROWS_A(0x27F0, 0x27FF),
    BRAILLE_PATTERNS(0x2800, 0x28FF),
    SUPPLEMENTAL_ARROWS_B(0x2900, 0x297F),
    MISCELLANEOUS_MATH_SYMBOLS_B(0x2980, 0x29FF),
    SUPPLEMENTAL_MATHEMATICAL_OPERATORS(0x2A00, 0x2AFF),
    MISCELLANEOUS_SYMBOLS_AND_ARROWS(0x2B00, 0x2BFF),
    GLAGOLITIC(0x2C00, 0x2C5F),
    LATIN_EXTENDED_C(0x2C60, 0x2C7F),
    COPTIC(0x2C80, 0x2CFF),
    GEORGIAN_SUPPLEMENT(0x2D00, 0x2D2F),
    TIFINAGH(0x2D30, 0x2D7F),
    ETHIOPIC_EXTENDED(0x2D80, 0x2DDF),
    CYRILLIC_EXTENDED_A(0x2DE0, 0x2DFF),
    SUPPLEMENTAL_PUNCTUATION(0x2E00, 0x2E7F),
    CJK_RADICALS_SUPPLEMENT(0x2E80, 0x2EFF),
    KANGXI_RADICALS(0x2F00, 0x2FDF),
    IDEOGRAPHIC_DESCRIPTION_CHARACTERS(0x2FF0, 0x2FFF),
    CJK_SYMBOLS_AND_PUNCTUATION(0x3000, 0x303F),
    HIRAGANA(0x3040, 0x309F),
    KATAKANA(0x30A0, 0x30FF),
    BOPOMOFO(0x3100, 0x312F),
    HANGUL_COMPATIBILITY_JAMO(0x3130, 0x318F),
    KANBUN(0x3190, 0x319F),
    BOPOMOFO_EXTENDED(0x31A0, 0x31BF),
    CJK_STROKES(0x31C0, 0x31EF),
    KATAKANA_PHONETIC_EXTENSIONS(0x31F0, 0x31FF),
    ENCLOSED_CJK_LETTERS_AND_MONTHS(0x3200, 0x32FF),
    CJK_COMPATIBILITY(0x3300, 0x33FF),
    CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A(0x3400, 0x4DBF),
    YIJING_HEXAGRAM_SYMBOLS(0x4DC0, 0x4DFF),
    CJK_UNIFIED_IDEOGRAPHS(0x4E00, 0x9FFF),
    YI_SYLLABLES(0xA000, 0xA48F),
    YI_RADICALS(0xA490, 0xA4CF),
    LISU(0xA4D0, 0xA4FF),
    VAI(0xA500, 0xA63F),
    CYRILLIC_EXTENDED_B(0xA640, 0xA69F),
    BAMUM(0xA6A0, 0xA6FF),
    MODIFIER_TONE_LETTERS(0xA700, 0xA71F),
    LATIN_EXTENDED_D(0xA720, 0xA7FF),
    SYLOTI_NAGRI(0xA800, 0xA82F),
    COMMON_INDIC_NUMBER_FORMS(0xA830, 0xA83F),
    PHAGS_PA(0xA840, 0xA87F),
    SAURASHTRA(0xA880, 0xA8DF),
    DEVANAGARI_EXTENDED(0xA8E0, 0xA8FF),
    KAYAH_LI(0xA900, 0xA92F),
    REJANG(0xA930, 0xA95F),
    HANGUL_JAMO_EXTENDED_A(0xA960, 0xA97F),
    JAVANESE(0xA980, 0xA9DF),
    MYANMAR_EXTENDED_B(0xA9E0, 0xA9FF),
    CHAM(0xAA00, 0xAA5F),
    MYANMAR_EXTENDED_A(0xAA60, 0xAA7F),
    TAI_VIET(0xAA80, 0xAADF),
    MEETEI_MAYEK_EXTENSIONS(0xAAE0, 0xAAFF),
    ETHIOPIC_EXTENDED_A(0xAB00, 0xAB2F),
    LATIN_EXTENDED_E(0xAB30, 0xAB6F),
    CHEROKEE_SUPPLEMENT(0xAB70, 0xABBF),
    MEETEI_MAYEK(0xABC0, 0xABFF),
    HANGUL_SYLLABLES(0xAC00, 0xD7AF),
    HANGUL_JAMO_EXTENDED_B(0xD7B0, 0xD7FF),
    HIGH_SURROGATES(0xD800, 0xDB7F),
    HIGH_PRIVATE_USE_SURROGATES(0xDB80, 0xDBFF),
    LOW_SURROGATES(0xDC00, 0xDFFF),
    PRIVATE_USE_AREA(0xE000, 0xF8FF),
    CJK_COMPATIBILITY_IDEOGRAPHS(0xF900, 0xFAFF),
    ALPHABETIC_PRESENTATION_FORMS(0xFB00, 0xFB4F),
    ARABIC_PRESENTATION_FORMS_A(0xFB50, 0xFDFF),
    VARIATION_SELECTORS(0xFE00, 0xFE0F),
    VERTICAL_FORMS(0xFE10, 0xFE1F),
    COMBINING_HALF_MARKS(0xFE20, 0xFE2F),
    CJK_COMPATIBILITY_FORMS(0xFE30, 0xFE4F),
    SMALL_FORM_VARIANTS(0xFE50, 0xFE6F),
    ARABIC_PRESENTATION_FORMS_B(0xFE70, 0xFEFF),
    HALFWIDTH_AND_FULLWIDTH_FORMS(0xFF00, 0xFFEF),
    SPECIALS(0xFFF0, 0xFFFF),
    LINEAR_B_SYLLABARY(0x10000, 0x1007F),
    LINEAR_B_IDEOGRAMS(0x10080, 0x100FF),
    AEGEAN_NUMBERS(0x10100, 0x1013F),
    ANCIENT_GREEK_NUMBERS(0x10140, 0x1018F),
    ANCIENT_SYMBOLS(0x10190, 0x101CF),
    PHAISTOS_DISC(0x101D0, 0x101FF),
    LYCIAN(0x10280, 0x1029F),
    CARIAN(0x102A0, 0x102DF),
    COPTIC_EPACT_NUMBERS(0x102E0, 0x102FF),
    OLD_ITALIC(0x10300, 0x1032F),
    GOTHIC(0x10330, 0x1034F),
    OLD_PERMIC(0x10350, 0x1037F),
    UGARITIC(0x10380, 0x1039F),
    OLD_PERSIAN(0x103A0, 0x103DF),
    DESERET(0x10400, 0x1044F),
    SHAVIAN(0x10450, 0x1047F),
    OSMANYA(0x10480, 0x104AF),
    OSAGE(0x104B0, 0x104FF),
    ELBASAN(0x10500, 0x1052F),
    CAUCASIAN_ALBANIAN(0x10530, 0x1056F),
    LINEAR_A(0x10600, 0x1077F),
    CYPRIOT_SYLLABARY(0x10800, 0x1083F),
    IMPERIAL_ARAMAIC(0x10840, 0x1085F),
    PALMYRENE(0x10860, 0x1087F),
    NABATAEAN(0x10880, 0x108AF),
    HATRAN(0x108E0, 0x108FF),
    PHOENICIAN(0x10900, 0x1091F),
    LYDIAN(0x10920, 0x1093F),
    MEROITIC_HIEROGLYPHS(0x10980, 0x1099F),
    MEROITIC_CURSIVE(0x109A0, 0x109FF),
    KHAROSHTHI(0x10A00, 0x10A5F),
    OLD_SOUTH_ARABIAN(0x10A60, 0x10A7F),
    OLD_NORTH_ARABIAN(0x10A80, 0x10A9F),
    MANICHAEAN(0x10AC0, 0x10AFF),
    AVESTAN(0x10B00, 0x10B3F),
    INSCRIPTIONAL_PARTHIAN(0x10B40, 0x10B5F),
    INSCRIPTIONAL_PAHLAVI(0x10B60, 0x10B7F),
    PSALTER_PAHLAVI(0x10B80, 0x10BAF),
    OLD_TURKIC(0x10C00, 0x10C4F),
    OLD_HUNGARIAN(0x10C80, 0x10CFF),
    HANIFI_ROHINGYA(0x10D00, 0x10D3F),
    RUMI_NUMERAL_SYMBOLS(0x10E60, 0x10E7F),
    YEZIDI(0x10E80, 0x10EBF),
    OLD_SOGDIAN(0x10F00, 0x10F2F),
    SOGDIAN(0x10F30, 0x10F6F),
    CHORASMIAN(0x10FB0, 0x10FDF),
    ELYMAIC(0x10FE0, 0x10FFF),
    BRAHMI(0x11000, 0x1107F),
    KAITHI(0x11080, 0x110CF),
    SORA_SOMPENG(0x110D0, 0x110FF),
    CHAKMA(0x11100, 0x1114F),
    MAHAJANI(0x11150, 0x1117F),
    SHARADA(0x11180, 0x111DF),
    SINHALA_ARCHAIC_NUMBERS(0x111E0, 0x111FF),
    KHOJKI(0x11200, 0x1124F),
    MULTANI(0x11280, 0x112AF),
    KHUDAWADI(0x112B0, 0x112FF),
    GRANTHA(0x11300, 0x1137F),
    NEWA(0x11400, 0x1147F),
    TIRHUTA(0x11480, 0x114DF),
    SIDDHAM(0x11580, 0x115FF),
    MODI(0x11600, 0x1165F),
    MONGOLIAN_SUPPLEMENT(0x11660, 0x1167F),
    TAKRI(0x11680, 0x116CF),
    AHOM(0x11700, 0x1173F),
    DOGRA(0x11800, 0x1184F),
    WARANG_CITI(0x118A0, 0x118FF),
    DIVES_AKURU(0x11900, 0x1195F),
    NANDINAGARI(0x119A0, 0x119FF),
    ZANABAZAR_SQUARE(0x11A00, 0x11A4F),
    SOYOMBO(0x11A50, 0x11AAF),
    PAU_CIN_HAU(0x11AC0, 0x11AFF),
    BHAIKSUKI(0x11C00, 0x11C6F),
    MARCHEN(0x11C70, 0x11CBF),
    MASARAM_GONDI(0x11D00, 0x11D5F),
    GUNJALA_GONDI(0x11D60, 0x11DAF),
    MAKASAR(0x11EE0, 0x11EFF),
    LISU_SUPPLEMENT(0x11FB0, 0x11FBF),
    TAMIL_SUPPLEMENT(0x11FC0, 0x11FFF),
    CUNEIFORM(0x12000, 0x123FF),
    CUNEIFORM_NUMBERS_AND_PUNCTUATION(0x12400, 0x1247F),
    EARLY_DYNASTIC_CUNEIFORM(0x12480, 0x1254F),
    EGYPTIAN_HIEROGLYPHS(0x13000, 0x1342F),
    EGYPTIAN_HIEROGLYPH_FORMAT_CONTROLS(0x13430, 0x1343F),
    ANATOLIAN_HIEROGLYPHS(0x14400, 0x1467F),
    BAMUM_SUPPLEMENT(0x16800, 0x16A3F),
    MRO(0x16A40, 0x16A6F),
    BASSA_VAH(0x16AD0, 0x16AFF),
    PAHAWH_HMONG(0x16B00, 0x16B8F),
    MEDEFAIDRIN(0x16E40, 0x16E9F),
    MIAO(0x16F00, 0x16F9F),
    IDEOGRAPHIC_SYMBOLS_AND_PUNCTUATION(0x16FE0, 0x16FFF),
    TANGUT(0x17000, 0x187FF),
    TANGUT_COMPONENTS(0x18800, 0x18AFF),
    KHITAN_SMALL_SCRIPT(0x18B00, 0x18CFF),
    TANGUT_SUPPLEMENT(0x18D00, 0x18D8F),
    KANA_SUPPLEMENT(0x1B000, 0x1B0FF),
    KANA_EXTENDED_A(0x1B100, 0x1B12F),
    SMALL_KANA_EXTENSION(0x1B130, 0x1B16F),
    NUSHU(0x1B170, 0x1B2FF),
    DUPLOYAN(0x1BC00, 0x1BC9F),
    SHORTHAND_FORMAT_CONTROLS(0x1BCA0, 0x1BCAF),
    BYZANTINE_MUSICAL_SYMBOLS(0x1D000, 0x1D0FF),
    MUSICAL_SYMBOLS(0x1D100, 0x1D1FF),
    ANCIENT_GREEK_MUSICAL_NOTATION(0x1D200, 0x1D24F),
    MAYAN_NUMERALS(0x1D2E0, 0x1D2FF),
    TAI_XUAN_JING_SYMBOLS(0x1D300, 0x1D35F),
    COUNTING_ROD_NUMERALS(0x1D360, 0x1D37F),
    MATHEMATICAL_ALPHANUMERIC_SYMBOLS(0x1D400, 0x1D7FF),
    SUTTON_SIGNWRITING(0x1D800, 0x1DAAF),
    GLAGOLITIC_SUPPLEMENT(0x1E000, 0x1E02F),
    NYIAKENG_PUACHUE_HMONG(0x1E100, 0x1E14F),
    WANCHO(0x1E2C0, 0x1E2FF),
    MENDE_KIKAKUI(0x1E800, 0x1E8DF),
    ADLAM(0x1E900, 0x1E95F),
    INDIC_SIYAQ_NUMBERS(0x1EC70, 0x1ECBF),
    OTTOMAN_SIYAQ_NUMBERS(0x1ED00, 0x1ED4F),
    ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS(0x1EE00, 0x1EEFF),
    MAHJONG_TILES(0x1F000, 0x1F02F),
    DOMINO_TILES(0x1F030, 0x1F09F),
    PLAYING_CARDS(0x1F0A0, 0x1F0FF),
    ENCLOSED_ALPHANUMERIC_SUPPLEMENT(0x1F100, 0x1F1FF),
    ENCLOSED_IDEOGRAPHIC_SUPPLEMENT(0x1F200, 0x1F2FF),
    MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHS(0x1F300, 0x1F5FF),
    EMOTICONS(0x1F600, 0x1F64F),
    ORNAMENTAL_DINGBATS(0x1F650, 0x1F67F),
    TRANSPORT_AND_MAP_SYMBOLS(0x1F680, 0x1F6FF),
    ALCHEMICAL_SYMBOLS(0x1F700, 0x1F77F),
    GEOMETRIC_SHAPES_EXTENDED(0x1F780, 0x1F7FF),
    SUPPLEMENTAL_ARROWS_C(0x1F800, 0x1F8FF),
    SUPPLEMENTAL_SYMBOLS_AND_PICTOGRAPHS(0x1F900, 0x1F9FF),
    CHESS_SYMBOLS(0x1FA00, 0x1FA6F),
    SYMBOLS_AND_PICTOGRAPHS_EXTENDED_A(0x1FA70, 0x1FAFF),
    SYMBOLS_FOR_LEGACY_COMPUTING(0x1FB00, 0x1FBFF),
    CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B(0x20000, 0x2A6DF),
    CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C(0x2A700, 0x2B73F),
    CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D(0x2B740, 0x2B81F),
    CJK_UNIFIED_IDEOGRAPHS_EXTENSION_E(0x2B820, 0x2CEAF),
    CJK_UNIFIED_IDEOGRAPHS_EXTENSION_F(0x2CEB0, 0x2EBEF),
    CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT(0x2F800, 0x2FA1F),
    CJK_UNIFIED_IDEOGRAPHS_EXTENSION_G(0x30000, 0x3134F),
    TAGS(0xE0000, 0xE007F),
    VARIATION_SELECTORS_SUPPLEMENT(0xE0100, 0xE01EF),
    SUPPLEMENTARY_PRIVATE_USE_AREA_A(0xF0000, 0xFFFFF),
    SUPPLEMENTARY_PRIVATE_USE_AREA_B(0x100000, 0x10FFFF),
    NO_BLOCK(-1, -1);  // For code points not in any block

    private final int begin;
    private final int end;

    UnicodeBlock(int begin, int end) {
        this.begin = begin;
        this.end = end;
    }

    /** Returns the inclusive begin code point for the block. */
    public int getBegin() {
        return begin;
    }

    /** Returns the inclusive end code point for the block. */
    public int getEnd() {
        return end;
    }

    /**
     * Returns the UnicodeBlock16 constant corresponding to the given code point,
     * or NO_BLOCK if it isn’t part of any defined block.
     */
    public static UnicodeBlock fromCodePoint(int codePoint) {
        for (UnicodeBlock block : values()) {
            if (block != NO_BLOCK && codePoint >= block.begin && codePoint <= block.end) {
                return block;
            }
        }
        return NO_BLOCK;
    }
}

